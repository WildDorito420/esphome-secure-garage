esphome:
  name: garage

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "xxxxxxx"

ota:
  password: "xxxxxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "xxxxx"
    password: "xxxxx"

captive_portal:
    

# Send WiFi signal strength & uptime to HA
sensor:
  - platform: wifi_signal
    name: "Garage WiFi Strength"
    id: strength
    update_interval: 60s
  - platform: uptime
    name: "Garage Uptime"
  - platform: template
    id: int_temp
    name: "Garage ESP Internal Temp"
    unit_of_measurement: "Â°C"
    device_class: "temperature"
    state_class: "measurement"
    lambda: return temperatureRead();
    
binary_sensor:
- platform: gpio
  id: garage_door_sensor
  pin:
    number: 13
    mode: INPUT_PULLUP
  name: "Garage Door State"
  device_class: garage
  filters:
    - delayed_on_off: 500ms

switch:
  - platform: gpio
    id: garage_door_relay
    name: "Garage Door Switch"
    pin: 2
    restore_mode: ALWAYS_OFF
    on_turn_on:
      then:
        - delay: 0.5s
        - switch.turn_off: garage_door_relay

cover:
  - platform: template
    name: "Garage Door"
    device_class: garage
    lambda: |-
      if (id(garage_door_sensor).state) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      - lambda: !lambda |-
          if (!id(garage_door_sensor).state) {
            id(garage_door_relay).turn_on();
          }
    close_action:
      - lambda: !lambda |-
          if (id(garage_door_sensor).state) {
            id(garage_door_relay).turn_on();
          }
    stop_action:
      - switch.turn_on: garage_door_relay
      - delay: 0.1s
      - switch.turn_off: garage_door_relay
  
